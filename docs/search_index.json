[["index.html", "Aplicaciones de electrónica digital Cáp. 1 Introducción", " Aplicaciones de electrónica digital Josué Meneses Díaz 2021-07-26 Cáp. 1 Introducción Los siguientes apuntes muestran diversas aplicaciones de circuitos digitales como complemento al curso electrónica digital y microcontroladores para la carrera de Ingeniería en Física. Propósito del circuito. Método de resolución ha utilizar. Esquema del circuito "],["intro.html", "Cáp. 2 Lógica combinacional", " Cáp. 2 Lógica combinacional En esta sección se presenta una colección de circuitos lógicos combinacionales aplicando diferentes métodos de análisis. Para cada uno de las aplicaciones mostradas se presenta: Propósito del circuito. Método de resolución ha utilizar. Esquema del circuito Los programas utilizados para el desarrollo de los circuitos han sido: Losigim-evolution para las pruebas y diseño de los circuitos combinacionales. xcircuit para la creación de los diagramas finales. "],["medio-sumador.html", "2.1 Medio Sumador", " 2.1 Medio Sumador Se conoce como medio sumador al circuito combinacional que permite realizar la operación se suma aritmética entre dos números binarios enteros considerando solamente un acarreo de salida. 2.1.1 Entradas y salidas El circuito posee dos posibles entradas: \\(A\\) \\(B\\) Recordando que el número máximo de bit en la salida de un sumador es igual a \\[ \\max\\{nbit(A), nbit(B)\\}+1 \\] Para este caso, el máximo número de bits entre \\(A\\) y \\(B\\) será 1 por lo que en la salida tendremos, a lo más, dos bits: El resultado de la suma mediante la función \\(S\\) El acarreo de salida mediante la función \\(A_{out}\\) 2.1.2 Tabla de verdad Tabla de verdad para el circuito de medio sumador binario. A B S \\(A_{out}\\) 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 2.1.3 Función booleana mediante minitérminos e implementación \\[\\begin{aligned} S(A, B) &amp;=&amp; \\sum m(1,2)\\\\ &amp;=&amp; m_1+m_2\\\\ &amp;=&amp; \\bar{A} B + A \\bar{B}\\\\ \\end{aligned}\\] Esta última es equivalente a la puerta lógica XOR (Puerta or exclusiva) \\[ S(A, B) = A\\oplus B \\] La salida \\(A_{out\\) para el acarreo de salida será \\[\\begin{aligned} A_{out} &amp;=&amp; AB\\\\ \\end{aligned}\\] 2.1.4 Función booleana mediante maxitérminos e implementación \\[\\begin{aligned} S(A, B) &amp;=&amp; \\prod M(0,3)\\\\ &amp;=&amp; M_0\\cdot M_3\\\\ &amp;=&amp; (A+B)(\\bar{A}+\\bar{B})\\\\ \\end{aligned}\\] La salida \\(A_{out}\\) para el acarreo de salida será \\[\\begin{aligned} A_{out} &amp;=&amp; \\prod M(0,1,2)\\\\ &amp;=&amp; M_1\\cdot M_2 \\cdot M_3\\\\ &amp;=&amp; (A+B)(A+\\bar{B})(\\bar{A}+B)\\\\ &amp;=&amp; (A+B)(A\\bar{A}+AB+\\bar{A}\\bar{B}+B\\bar{B})\\\\ &amp;=&amp; (A+B)(AB+\\bar{A}\\bar{B})\\\\ &amp;=&amp; AAB+A\\bar{A}\\bar{B}+ABB+\\bar{A}B\\bar{B}\\\\ &amp;=&amp; AB+AB\\\\ &amp;=&amp; AB\\\\ \\end{aligned}\\] 2.1.5 Función booleana mediante k-map Figure 2.1: Mapas de Karnaugh para el circuto de medio sumador binario TODO: Circuito equivalentes "],["sumador-completo.html", "2.2 Sumador completo", " 2.2 Sumador completo A diferencia el circuito de medio sumador, este circuito considera un acarreo de entrada junto con los bits de los números \\(A\\) y \\(B\\), permitiendo extender el uso de este diseño a sumadores de n-bits. "],["medio-restador-binario.html", "2.3 Medio Restador Binario", " 2.3 Medio Restador Binario Definimos el caso de un restador de 1 bit utilizando el concepto de prestamo Entrada Salida A B Prestamo R 0 0 0 0 0 1 1 1 1 0 0 1 1 1 0 0 2.3.1 Función booleana mediante minitérminos e implementación \\[\\begin{aligned} S(A, B) &amp;=&amp; \\sum m(1,2)\\\\ &amp;=&amp; m_1+ m_1\\\\ &amp;=&amp; \\bar{A}B + A\\bar{B}\\\\ &amp;=&amp; A \\oplus B\\\\ \\end{aligned}\\] \\[\\begin{aligned} P(A, B) &amp;=&amp; \\sum m(1)\\\\ &amp;=&amp; m_1\\\\ &amp;=&amp; \\bar{A}B\\\\ \\end{aligned}\\] Luego la implementación mediante puertas lógicas es tan simple como: Figure 2.2: Circuito equivalente para restador binario utilizando función de prestamo "],["restador-completo.html", "2.4 Restador completo", " 2.4 Restador completo Al igual que el sumador completo, el restador completo considera un 3er bit de entrada (prestamo de entrada) que permite extender este circuito hasta n-conexiones. La tabla de verdad para este circuito por lo tanto considera tres entradas: \\(A\\) \\(B\\) \\(P_{in}\\) Y dos salidas \\(R\\) \\(P_{out}\\) Entrada Salida A B Pin Pout R 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 1 2.4.1 Circuito Figure 2.3: Circuito del restador completo utilizando puertas xor 2.4.2 Conexión en cascada Utilizando el circuito de restador completo de 1 bits podemos extender el circuito a un restador de n-bits conectando en cascada n circuitos restadores de 1 bits. Por ejemplo, utilizando 4 circuitos restadores completos de 1 bits conectando las salidas de prestamo a las entradas de préstamo del siguiente circuito como: Figure 2.4: Circuito restador de 4 bits utilizando 4 circuitos restadores completos de 1 bits en conexion cascada. "],["multiplexor-mux.html", "2.5 Multiplexor (MUX)", " 2.5 Multiplexor (MUX) El circuito Multiplexor tiene como finalidad conectar una de las multiples entradas del circuito a la salida \\(Y\\), en otras palabras, los Multiplexores son switches digitales. La elección de que linea de entrada será conectada con la salida del circuito es realizada mediante unas entradas llamadas lineas de selección. Normalmente, los MUX poseen \\(2^n\\) lineas de entrada y \\(n\\) lineas de selección. Las entradas de selección utilizan la numeración binaria para seleccionar la entrada a conectar. Entrada Salida I0 I1 S Y 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 \\[\\begin{aligned} Y &amp;=&amp; \\bar{I_0}I_1 S + I_0\\bar{I_1}\\bar{S}+I_0I_1\\bar{S}+I_0I_1S\\\\ &amp;=&amp; I_1S(I_0\\bar{I_0})+I_0\\bar{S}(I_1\\bar{I_1})\\\\ &amp;=&amp; I_1S+I_0\\bar{S}\\\\ \\end{aligned}\\] Figure 2.5: Circuito Multiplexor de 1 bit. TODO: Agregar símbolo equivalente 2.5.1 Implementación de entrada habilitante Una de las extensión más interesantes de este circuito combinacional es la adición de una entrada habilitante, generalmente denominada como entrada \\(E\\) (enable) que permite activar/desactivar el MUX. Una forma de implementar esta entrada sería realizar el procedimiento típico de diseñar una tabla de verdad, ahora con 4 entradas, encontrar la función booleana e implementar el circuito, pero existe otra forma más intuitiva que veremos a continuación. Consideremos el circuito de la figura 2.5, vemos que tanto la entrada \\(I_0\\) como la entrada \\(I_1\\) se encuentran conectadas a dos puertas AND antes de ser sumadas mediante la puerta final OR. En general, las puertas AND (como su nombre lo indican) pueden ser utilizadas como puertas habilitantes ya que, si una de sus entradas es cero, entonces si salida siempre será cero, independiente de los otros valores de entrada en la puerta. De esta forma, si ampliamos el número de entradas en cada una de las puertas AND de 2 a 3 podemos utilizar esta nueva entrada para habilitar/deshabilitar el circuito globalmente. En la figura 2.6 Figure 2.6: Circuito MUX de 1 bit con entrada habilitante "],["methods.html", "Cáp. 3 Methods", " Cáp. 3 Methods We describe our methods in this chapter. "],["applications.html", "Cáp. 4 Applications", " Cáp. 4 Applications Some significant applications are demonstrated in this chapter. "],["example-one.html", "4.1 Example one", " 4.1 Example one "],["example-two.html", "4.2 Example two", " 4.2 Example two "],["final-words.html", "Cáp. 5 Final Words", " Cáp. 5 Final Words We have finished a nice book. "],["references.html", "References", " References "]]
